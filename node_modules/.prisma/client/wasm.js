
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.OrganizationsScalarFieldEnum = {
  org_id: 'org_id',
  name: 'name',
  type_id: 'type_id',
  plan_id: 'plan_id',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.Organization_typesScalarFieldEnum = {
  type_id: 'type_id',
  type_name: 'type_name',
  description: 'description'
};

exports.Prisma.Organization_plansScalarFieldEnum = {
  plan_id: 'plan_id',
  plan_name: 'plan_name',
  description: 'description'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProjectsScalarFieldEnum = {
  projects_id: 'projects_id',
  org_id: 'org_id',
  user_id: 'user_id',
  projects_name: 'projects_name',
  location: 'location',
  phone: 'phone',
  email: 'email',
  address: 'address',
  lat: 'lat',
  lng: 'lng',
  pin: 'pin',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  organizations: 'organizations',
  organization_types: 'organization_types',
  organization_plans: 'organization_plans',
  categories: 'categories',
  users: 'users',
  projects: 'projects'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\githunclone\\FastFood-API\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\githunclone\\FastFood-API\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider      = \"prisma-client-js\"\n  binaryTargets = [\"native\", \"debian-openssl-3.0.x\"]\n}\n\n/**\n * generator client {\n * provider      = \"prisma-client-js\"\n * binaryTargets = [\"native\", \"debian-openssl-3.0.x\"]\n * }\n */\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel organizations {\n  org_id     String             @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  name       String\n  type_id    Int\n  plan_id    Int\n  user_id    String?\n  created_at DateTime?          @default(now()) @db.Timestamp(6)\n  plan       organization_plans @relation(fields: [plan_id], references: [plan_id], onDelete: NoAction, onUpdate: NoAction)\n  type       organization_types @relation(fields: [type_id], references: [type_id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@map(\"organizations\")\n}\n\nmodel organization_types {\n  type_id       Int             @id @default(autoincrement())\n  type_name     String          @unique\n  description   String?\n  organizations organizations[]\n\n  @@map(\"organization_types\")\n}\n\nmodel organization_plans {\n  plan_id       Int             @id @default(autoincrement())\n  plan_name     String          @unique\n  description   String?\n  organizations organizations[]\n\n  @@map(\"organization_plans\")\n}\n\nmodel categories {\n  id         Int       @id @default(autoincrement())\n  name       String    @db.VarChar(50)\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n\n  @@map(\"categories\")\n}\n\nmodel users {\n  id         Int       @id @default(autoincrement())\n  email      String    @unique @db.VarChar(255)\n  password   String    @db.VarChar(255)\n  name       String    @db.VarChar(100)\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n  updated_at DateTime? @default(now()) @db.Timestamp(6)\n\n  @@map(\"users\")\n}\n\nmodel projects {\n  projects_id   String    @id @default(dbgenerated(\"gen_random_uuid()\")) @db.Uuid\n  org_id        String\n  user_id       String?\n  projects_name String\n  location      String?\n  phone         String?\n  email         String?\n  address       String?\n  lat           Float?    @db.DoublePrecision\n  lng           Float?    @db.DoublePrecision\n  pin           String?\n  created_at    DateTime? @default(now()) @db.Timestamp(6)\n\n  @@map(\"projects\") // ðŸ‘ˆ à¸Šà¸µà¹‰à¹„à¸›à¸—à¸µà¹ˆà¸•à¸²à¸£à¸²à¸‡à¹ƒà¸™ DB\n}\n",
  "inlineSchemaHash": "05daba3897c5eb88cb7e3c0d143649d79686f555ab66901144fcb884e9281e95",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"organizations\":{\"fields\":[{\"name\":\"org_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"plan_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"organization_plans\",\"relationName\":\"organization_plansToorganizations\"},{\"name\":\"type\",\"kind\":\"object\",\"type\":\"organization_types\",\"relationName\":\"organization_typesToorganizations\"}],\"dbName\":\"organizations\"},\"organization_types\":{\"fields\":[{\"name\":\"type_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizations\",\"kind\":\"object\",\"type\":\"organizations\",\"relationName\":\"organization_typesToorganizations\"}],\"dbName\":\"organization_types\"},\"organization_plans\":{\"fields\":[{\"name\":\"plan_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"plan_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizations\",\"kind\":\"object\",\"type\":\"organizations\",\"relationName\":\"organization_plansToorganizations\"}],\"dbName\":\"organization_plans\"},\"categories\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"categories\"},\"users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"users\"},\"projects\":{\"fields\":[{\"name\":\"projects_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"org_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projects_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lng\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"pin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"projects\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

